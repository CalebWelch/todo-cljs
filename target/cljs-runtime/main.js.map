{"version":3,"sources":["main.cljs"],"mappings":"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","names":["main/itemAdd","reagent.core.atom","main/event-queue","cljs.core.async.chan","main/valueAdd","main/counter","c__30331__auto__","cljs.core.async.impl.dispatch/run","f__30332__auto__","switch__30199__auto__","state_37487","state_val_37488","cljs.core.async.impl.ioc-helpers/take!","inst_37472","inst_37473","statearr-37489","statearr-37490","G__37491","cljs.core/Keyword","statearr-37492","statearr-37493","js/Error","inst_37485","cljs.core.async.impl.ioc-helpers/return-chan","inst_37480","statearr-37494","inst_37475","statearr-37495","inst_37477","statearr-37496","inst_37482","statearr-37497","statearr-37498","statearr-37499","state-machine__30200__auto__","ret-value__30201__auto__","result__30202__auto__","cljs.core/keyword-identical?","e37500","js/Object","ex__30203__auto__","statearr-37501","cljs.core.async.impl.ioc-helpers/process-exception","state__30333__auto__","statearr-37502","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.swap_BANG_","cljs.core/inc","cljs.core/dec","p1__37503#","main/input-box","type","label","var","cljs.core/reset!","main/ordered-list","val","cljs.core/deref","newItems","cljs.core/count","iter__4582__auto__","s__37505","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","b__37507","cljs.core/chunk-buffer","i__37506","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__37504","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","x","cljs.core.range","cljs.core.nth","main/main-component","cljs.core/conj","main/mount","c","reagent.dom.render","js/document.getElementById","main/reload!","cljs.core.print","main/main!","cljs.core/chunk-first"],"sourcesContent":["(ns main\r\n  (:require [reagent.dom :as dom]\r\n            [reagent.core :as r]\r\n            [cljs.core.async :refer (chan put! <! go go-loop timeout)]))\r\n\r\n(def itemAdd (r/atom \"\"))\r\n(def event-queue (chan))\r\n(def valueAdd (r/atom ()))\r\n(def counter (r/atom 0))\r\n(go-loop [event (<! event-queue)]\r\n(case event\r\n  :inc (swap! counter inc)\r\n  :dec (swap! counter dec))\r\n  (recur (<! event-queue)))\r\n\r\n\r\n(defn input-box  [type label var]\r\n  [:div.input-box\r\n   [:input \r\n    {:on-change #(reset! var (-> %\r\n                                 .-target\r\n                                 .-value))\r\n     :type type}\r\n    ]])\r\n\r\n(defn ordered-list [val]\r\n  (let [newItems @val]\r\n    [:div.flex.flex-col {:class \"items List\"}(if (< (count newItems) 1) \r\n             \"\" \r\n             (for [x (range (count newItems))] [:div.card (nth newItems x)]))]))\r\n\r\n(defn main-component []\r\n  [:div.flex.flex-col.p-20\r\n   [:h1.flex.text-3xl {:justify-content \"center\"} \"Thing to do\"]\r\n   [:div.flex.justify-center\r\n    [input-box \"text \" \"\"  itemAdd]\r\n    [:button.btn-blue.hover:bg-teal-300 {:on-click #(do\r\n                                                      (swap! counter inc)\r\n                                                      (swap! valueAdd conj @itemAdd))}\r\n     \"press-me\"]]\r\n   (ordered-list  valueAdd)])\r\n\r\n(defn mount [c]\r\n  (dom/render  [c] (js/document.getElementById \"app\")))\r\n\r\n(defn reload! []\r\n  (mount main-component)\r\n  (print \"reloaded\"))\r\n\r\n(defn main! []\r\n  (mount main-component)\r\n  (print \"main\"))"]}