{"version":3,"sources":["main.cljs"],"mappings":"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","names":["main/itemAdd","reagent.core.atom","main/valueAdd","main/counter","p1__35632#","main/input-box","type","label","var","cljs.core/reset!","main/toggle-class","a","k","class1","class2","cljs.core.prn","fexpr__35633","cljs.core/deref","cljs.core._EQ_","fexpr__35634","cljs.core.swap_BANG_","cljs.core/assoc","main/card","item","main/ordered-list","val","newItems","iter__4582__auto__","s__35636","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__35638","cljs.core/chunk-buffer","i__35637","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__35635","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","x","cljs.core.range","local-state","cljs.core.nth","main/main-component","cljs.core/inc","cljs.core/conj","main/mount","c","reagent.dom.render","js/document.getElementById","main/reload!","cljs.core.print","main/main!","cljs.core/chunk-first"],"sourcesContent":["(ns main\r\n  (:require [reagent.dom :as dom]\r\n            [reagent.core :as r]\r\n            ))\r\n\r\n(def itemAdd (r/atom \"\"))\r\n(def valueAdd (r/atom ()))\r\n(def counter (r/atom 0))\r\n\r\n(defn input-box  [type label var]\r\n  [:div.input-box\r\n   [:input \r\n    {:on-change #(reset! var (-> %\r\n                                 .-target\r\n                                 .-value))\r\n     :type type}\r\n    ]])\r\n\r\n(defn toggle-class [a k class1 class2]\r\n(prn (@a k) class1 class2)\r\n  (if (= (@a k) class1)\r\n    (swap! a assoc k class2)\r\n    (swap! a assoc k class1)\r\n    ))\r\n\r\n(defn card [item a]\r\n    [:li {:class (:card-state @a)}\r\n     [:div.card\r\n      [:ul.ba\r\n       [:label.switch\r\n        [:input  {:type \"checkbox\"}] \r\n        [:span.slider.round\r\n         {:on-click #(toggle-class a :card-state \"incomplete\" \"complete\")}]]\r\n       item]]])\r\n\r\n(defn ordered-list [val]\r\n  (let [newItems @val]\r\n    [:div.flex.flex-col {:class \"items List\"}\r\n     (for [x (range (count newItems))] \r\n       (let [local-state (r/atom {:card-state \"incomplete\"})]               \r\n         [card (nth newItems x) local-state])\r\n       )]))\r\n\r\n(defn main-component []\r\n  [:div.flex.flex-col.p-20 {:justify-content \"center\"}\r\n   [:h1.flex.text-3xl {:justify-content \"center\"} \"Thing to do\"]\r\n   [:div.flex.justify-center\r\n    [input-box \"text\" \"\"  itemAdd]\r\n    [:button.btn-blue.hover:bg-teal-300 {:on-click #(do\r\n                                                      (swap! counter inc)\r\n                                                      (swap! valueAdd conj @itemAdd))}\r\n     \"press-me\"]]\r\n   (ordered-list  valueAdd)])\r\n\r\n(defn mount [c]\r\n  (dom/render  [c] (js/document.getElementById \"app\")))\r\n\r\n(defn reload! []\r\n  (mount main-component)\r\n  (print \"reloaded\"))\r\n\r\n(defn main! []\r\n  (mount main-component)\r\n  (print \"main\"))"]}